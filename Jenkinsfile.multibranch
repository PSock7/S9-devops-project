pipeline {
    agent {
        label 'jenkins-slave'
    }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('devops-cred')
        NEW_IMAGE = "efrei2023/golangwebapi:${BUILD_NUMBER}"
    }
    stages {
        stage('SCM Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build docker image') {
            steps {
                sh 'docker build -t ${NEW_IMAGE} .'
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'devops-cred', passwordVariable: 'DOCKERHUB_PSW', usernameVariable: 'DOCKERHUB_USR')]) {
                    sh 'echo $DOCKERHUB_PSW | docker login -u $DOCKERHUB_USR --password-stdin'
                }
            }
        }

        stage('Push image to Docker Hub') {
            steps {
                sh 'docker push ${NEW_IMAGE}'
            }
        }

        stage('Deploy to Dev Environment') {
            when {
                branch 'dev'
            }
            steps {
                script {
                    sh "sed -i 's|efrei2023/golangwebapi:latest|${NEW_IMAGE}|' ./Kubernetes/dev/go.yaml"
                    sh 'kubectl apply -f ./Kubernetes/namespace.yaml'
                    sh 'kubectl apply -f ./Kubernetes/dev/go.yaml'
                }
            }
        }

        stage('Deploy to Prod Environment') {
            when {
                branch 'prod'
            }
            steps {
                script {
                    sh "sed -i 's|efrei2023/golangwebapi:latest|${NEW_IMAGE}|' ./Kubernetes/prod/go.yaml"
                    sh 'kubectl apply -f ./Kubernetes/namespace.yaml'
                    sh 'kubectl apply -f ./Kubernetes/prod/go.yaml'
                }
            }
        }

    }
    post {
        always {
            sh 'docker logout'
        }
    }
}
